一.创建版本库（repository）,相当于是个目录，该目录里面的所有文件都可以被git管理起来，每个文件的修改、删除，git都能跟踪。
1.在本地选择一个合适的地方，创建一个目录：mkdir learngit
2.cd  learngit:切换到当前目录
3.git init:该命令把这个目录变成git可以管理的仓库
4.在该目录下创建一个文件并输入内容，该文件一定要放到learngit目录下（子目录也行）,如 readme.txt
5.把一个文件放到git仓库分两步：第一步git add readme.txt(告诉git,把文件添加到仓库）；
第二步git commit -m "wrote a readme file"(提交，-m后面输入的是本次提交的说明，可以输入任意内容但最好是有意义的。）
* git add <file> 可以反复添加或同时添加多个文件。

二.在本地进行修改
1.git status；该命令可以让我们时刻掌握仓库当前的状态。
2.git diff <file>:该命令可以查看对文件作了什么修改。
3.git log:可以查看从近到远的提交历史记录；
4.git log --pretty=oneline:可以看到更简洁的提交历史记录。
5.git reset --hard HEAD^:可以把当前版本回退到上一个版本。（在git中，HEAD表示当前版本，HEAD^表示上一个版本）
6.git reset --hard <版本号前一小串数字>:可以让指针指向任意一个版本。
7.git reflog:用来记录你的每一次命令

三.概念理解
1.工作区（working directory）：即在电脑里能看到的目录
2.版本库（.git）：工作区下的一个隐藏目录，是git的版本库。该版本库里包含stage（或者叫index），master以及指向master的一个指针HEAD。
3.stage：暂存区，git add把文件添加进去实际上就是把文件修改添加到暂存区。
4.如果不把修改添加到暂存区，是无法把修改提交的。

四.撤销修改
1.有两种情况：一种是文件被修改后还没放到暂存区，撤销修改就回到和版本库一模一样的状态；
git checkout -- <file>: 意思是把文件在工作区的修改撤销。
* 注意--和文件之间一定要有空格。

2.一种是文件修改后已经被添加到暂存区，又做了修改，这时撤销修改就是回到添加到暂存区后的状态；
git reset HEAD file ：把暂存区的修改撤销掉，重新放回工作区。
* 经尝试，这时工作区的修改包括第一次和第二次的修改。
